@import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Exo+2:wght@300;400;600&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    /* Deep space theme */
    --background: 220 25% 4%;
    --foreground: 210 40% 95%;

    --card: 220 20% 8%;
    --card-foreground: 210 40% 95%;

    --popover: 220 20% 8%;
    --popover-foreground: 210 40% 95%;

    --primary: 258 90% 66%;
    --primary-foreground: 220 25% 4%;

    --secondary: 220 15% 15%;
    --secondary-foreground: 210 40% 95%;

    --muted: 220 15% 12%;
    --muted-foreground: 220 15% 60%;

    --accent: 280 70% 55%;
    --accent-foreground: 220 25% 4%;

    --destructive: 0 80% 65%;
    --destructive-foreground: 220 25% 4%;

    --border: 220 15% 18%;
    --input: 220 15% 18%;
    --ring: 258 90% 66%;

    --radius: 0.75rem;

    --sidebar-background: 220 25% 4%;
    --sidebar-foreground: 210 40% 95%;
    --sidebar-primary: 258 90% 66%;
    --sidebar-primary-foreground: 220 25% 4%;
    --sidebar-accent: 220 15% 15%;
    --sidebar-accent-foreground: 210 40% 95%;
    --sidebar-border: 220 15% 18%;
    --sidebar-ring: 258 90% 66%;

    /* Cosmic colors */
    --cosmic-purple: 258 90% 66%;
    --cosmic-blue: 200 100% 70%;
    --cosmic-pink: 320 85% 75%;
    --cosmic-teal: 180 100% 60%;
    --cosmic-gold: 45 100% 70%;
    --cosmic-green: 120 85% 65%;
    --cosmic-orange: 25 100% 70%;

    /* Particle colors */
    --particle-star: 45 100% 85%;
    --particle-nebula: 280 70% 70%;
    --particle-comet: 200 100% 80%;
    --particle-galaxy: 320 85% 75%;
    --particle-plasma: 180 100% 75%;

    /* Space background */
    --space-void: 220 25% 2%;
    --space-deep: 220 25% 4%;
    --space-glow: 258 90% 66%;
  }

  .dark {
    /* Keep same as root since we're using dark theme by default */
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 200 98% 39%;
    --primary-foreground: 240 10% 3.9%;

    --secondary: 240 4.8% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 5.9% 10%;
    --muted-foreground: 240 4.4% 58%;

    --accent: 240 4.8% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 20%;
    --input: 240 5.9% 20%;
    --ring: 200 98% 39%;
    --sidebar-background: 240 10% 3.9%;
    --sidebar-foreground: 0 0% 98%;
    --sidebar-primary: 200 98% 39%;
    --sidebar-primary-foreground: 240 10% 3.9%;
    --sidebar-accent: 240 4.8% 15.9%;
    --sidebar-accent-foreground: 0 0% 98%;
    --sidebar-border: 240 5.9% 20%;
    --sidebar-ring: 200 98% 39%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-cosmic;
    background: radial-gradient(
      ellipse at center,
      hsl(var(--space-deep)) 0%,
      hsl(var(--space-void)) 100%
    );
    min-height: 100vh;
    overflow-x: hidden;
  }

  .retro-text {
    @apply font-retro text-neon-cyan;
    text-shadow: 0 0 10px currentColor;
  }

  .neon-glow {
    filter: drop-shadow(0 0 8px currentColor);
  }

  .game-board {
    background:
      linear-gradient(90deg, hsl(var(--retro-grid)) 1px, transparent 1px),
      linear-gradient(180deg, hsl(var(--retro-grid)) 1px, transparent 1px);
    background-size: 20px 20px;
  }

  .tetris-block {
    border: 1px solid rgba(255, 255, 255, 0.3);
    position: relative;
  }

  .tetris-block::before {
    content: "";
    position: absolute;
    top: 2px;
    left: 2px;
    right: 2px;
    bottom: 2px;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.2) 0%,
      transparent 50%,
      rgba(0, 0, 0, 0.2) 100%
    );
    pointer-events: none;
  }

  @keyframes neon-pulse {
    0%,
    100% {
      filter: drop-shadow(0 0 5px currentColor);
    }
    50% {
      filter: drop-shadow(0 0 20px currentColor)
        drop-shadow(0 0 30px currentColor);
    }
  }

  .neon-pulse {
    animation: neon-pulse 2s ease-in-out infinite;
  }

  @keyframes retro-blink {
    0%,
    50% {
      opacity: 1;
    }
    51%,
    100% {
      opacity: 0.3;
    }
  }

  .retro-blink {
    animation: retro-blink 1s infinite;
  }

  @keyframes line-clear {
    0% {
      background: currentColor;
      transform: scaleY(1);
    }
    50% {
      background: white;
      transform: scaleY(1.2);
    }
    100% {
      background: transparent;
      transform: scaleY(0);
    }
  }

  .line-clear-animation {
    animation: line-clear 0.5s ease-in-out;
  }

  @keyframes piece-land {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }

  .piece-land {
    animation: piece-land 0.2s ease-out;
  }

  @keyframes game-over-shake {
    0%,
    100% {
      transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70%,
    90% {
      transform: translateX(-2px);
    }
    20%,
    40%,
    60%,
    80% {
      transform: translateX(2px);
    }
  }

  .game-over-shake {
    animation: game-over-shake 0.6s ease-in-out;
  }

  @keyframes scanlines {
    0% {
      transform: translateY(-100%);
    }
    100% {
      transform: translateY(100vh);
    }
  }

  .scanlines::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 255, 255, 0.5),
      transparent
    );
    animation: scanlines 3s linear infinite;
    pointer-events: none;
    z-index: 1000;
  }

  @keyframes grid-glow {
    0%,
    100% {
      opacity: 0.1;
    }
    50% {
      opacity: 0.3;
    }
  }

  .grid-glow {
    animation: grid-glow 2s ease-in-out infinite;
  }

  /* Cosmic Animations */
  @keyframes cosmic-pulse {
    0%,
    100% {
      filter: drop-shadow(0 0 10px currentColor);
      transform: scale(1);
    }
    50% {
      filter: drop-shadow(0 0 30px currentColor)
        drop-shadow(0 0 50px currentColor);
      transform: scale(1.05);
    }
  }

  .cosmic-pulse {
    animation: cosmic-pulse 3s ease-in-out infinite;
  }

  @keyframes stellar-drift {
    0% {
      transform: translateY(0) rotate(0deg);
    }
    100% {
      transform: translateY(-20px) rotate(360deg);
    }
  }

  .stellar-drift {
    animation: stellar-drift 8s ease-in-out infinite alternate;
  }

  @keyframes nebula-flow {
    0%,
    100% {
      transform: scale(1) rotate(0deg);
      opacity: 0.3;
    }
    25% {
      transform: scale(1.1) rotate(90deg);
      opacity: 0.6;
    }
    50% {
      transform: scale(0.9) rotate(180deg);
      opacity: 0.4;
    }
    75% {
      transform: scale(1.2) rotate(270deg);
      opacity: 0.7;
    }
  }

  .nebula-flow {
    animation: nebula-flow 20s linear infinite;
  }

  @keyframes galaxy-spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .galaxy-spin {
    animation: galaxy-spin 30s linear infinite;
  }

  @keyframes particle-twinkle {
    0%,
    100% {
      opacity: 0.3;
      transform: scale(0.8);
    }
    50% {
      opacity: 1;
      transform: scale(1.2);
    }
  }

  .particle-twinkle {
    animation: particle-twinkle 2s ease-in-out infinite;
  }

  @keyframes cosmic-glow {
    0%,
    100% {
      box-shadow: 0 0 20px currentColor;
    }
    50% {
      box-shadow:
        0 0 40px currentColor,
        0 0 60px currentColor;
    }
  }

  .cosmic-glow {
    animation: cosmic-glow 2s ease-in-out infinite;
  }

  /* Space UI Styles */
  .space-glass {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .cosmic-border {
    position: relative;
  }

  .cosmic-border::before {
    content: "";
    position: absolute;
    inset: 0;
    padding: 2px;
    background: linear-gradient(
      45deg,
      hsl(var(--cosmic-purple)),
      hsl(var(--cosmic-blue)),
      hsl(var(--cosmic-teal)),
      hsl(var(--cosmic-purple))
    );
    border-radius: inherit;
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask-composite: xor;
  }

  /* Slider cosmic styling */
  .cosmic-slider {
    --primary: var(--cosmic-purple);
  }

  /* Button cosmic effects */
  .cosmic-button {
    position: relative;
    overflow: hidden;
  }

  .cosmic-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s;
  }

  .cosmic-button:hover::before {
    left: 100%;
  }
}
